<launch>
	<arg name="arg_x" default="0.00" />
	<arg name="arg_y" default="0.00" />
	<arg name="arg_z" default="0.00" />
	<arg name="arg_R" default="0.00" />
	<arg name="arg_P" default="0.00" />
	<arg name="arg_Y" default="0.00" />
	
	<!--Urdf file path-->
	<param name="robot_description" textfile="$(find Robot_Snake_URDF)/urdf/Robot_Snake_URDF.urdf"/>
	
	<!--spawn a empty gazebo world-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" />
	<node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
	
	<!--spawn model-->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model Robot_Snake_URDF -J cabeza_motor1 0.0 -J motor1_cuerpo1 0.0 -J cuerpo1_motor2 0.0 -J motor2_cuerpo2 0.0 -J cuerpo2_motor3 0.0 -J motor3_cuerpo3 0.0 -J cuerpo3_motor4 0.0 -J motor4_cola 0.0" />
	
	<!--Load and launch the joint trajectory controller-->
	<rosparam file ="$(find Robot_Snake_URDF)/config/joint_trajectory_controller.yaml" command="load"/>
	
	<!--LINEACOMENTAD <node name= "controller_spawner" pkg= "controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller robot_arm_controller"/> -->
	<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize -->
	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

</launch>
